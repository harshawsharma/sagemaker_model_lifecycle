version: 0.2

env:
    variables:
        IMAGE_REPO_NAME: "my_model_image_repo"

phases:
  pre_build:
    commands:
      - export AWS_ACCOUNT_ID=`aws sts get-caller-identity --query 'Account' --output text`
      - export MODEL_COMMIT_ID=${CODEBUILD_RESOLVED_SOURCE_VERSION}
      - export ECR_IMAGE_TAG="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${MODEL_COMMIT_ID}"
      - printenv
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t ${IMAGE_REPO_NAME}:${MODEL_COMMIT_ID} .
      - docker tag "${IMAGE_REPO_NAME}:${MODEL_COMMIT_ID}" "${ECR_IMAGE_TAG}"
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push ${ECR_IMAGE_TAG}
      - echo Updating the training parameters specification
      - sed -i -e "s/TRAINING_JOB_NAME/${IMAGE_REPO_NAME}-${MODEL_COMMIT_ID}/" training_job_parameters.json
      - sed -i -e "s/MODEL_IMAGE/${ECR_IMAGE_TAG}/" training_job_parameters.json
      - sed -i -e "s/MODEL_COMMIT_ID/${MODEL_COMMIT_ID}/" training_job_parameters.json
      - echo Sending training job to SageMaker
      - aws sagemaker create-training-job --cli-input-json file://training_job_parameters.json
